<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slljr.finance.admin.mapper.UserTradeOrderMapper">
  <resultMap id="BaseResultMap" type="com.slljr.finance.common.pojo.model.UserTradeOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />    
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="payment_amount" jdbcType="DOUBLE" property="paymentAmount" />
    <result column="receive_amount" jdbcType="DOUBLE" property="receiveAmount" />
    <result column="service_charge" jdbcType="DOUBLE" property="serviceCharge" />
    <result column="channel_id" jdbcType="INTEGER" property="channelId" />
    <result column="payment_card_id" jdbcType="INTEGER" property="paymentCardId" />
    <result column="receive_card_id" jdbcType="INTEGER" property="receiveCardId" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="bill_amount" jdbcType="DOUBLE" property="billAmount" />
    <result column="card_balance" jdbcType="DOUBLE" property="cardBalance" />
    <result column="card_last_payment_date" jdbcType="DATE" property="cardLastPaymentDate" />
    <result column="payment_days" jdbcType="VARCHAR" property="paymentDays" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="VoResultMap" type="com.slljr.finance.common.pojo.vo.UserTradeDetailsVo" extends="BaseResultMap">    
    <result column="type" jdbcType="INTEGER" property="payType" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="card_id" jdbcType="INTEGER" property="cardId" />
    <result column="service_charge" jdbcType="DOUBLE" property="serviceCharge" />
    <result column="channel_id" jdbcType="INTEGER" property="channelId" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="status" jdbcType="INTEGER" property="payStatus" />
  </resultMap>
  
  <resultMap id="ResultMapWithName" type="com.slljr.finance.common.pojo.vo.UserTradeOrderVO" extends="BaseResultMap">
    <result column="userName" property="userName"/>
    <result column="paymentChannelName" property="paymentChannelName"/>
    <result column="hidePayCardNo" property="hidePayCardNo"/>
    <result column="hideReceiveCardNo" property="hideReceiveCardNo"/>
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, type, payment_amount, receive_amount, service_charge, channel_id, payment_card_id, 
    receive_card_id, summary, bill_amount, card_balance, card_last_payment_date, payment_days, 
    status, create_time, update_time
  </sql>

  <sql id="Base_Column_List1">
    t.id, t.uid, t.type, t.payment_amount, t.receive_amount, t.service_charge, t.channel_id, t.payment_card_id,
    t.receive_card_id, t.summary, t.bill_amount, t.card_balance, t.card_last_payment_date, t.payment_days,
    t.status, t.create_time, t.update_time
  </sql>

  <select id="selectByExample" parameterType="com.slljr.finance.common.pojo.model.UserTradeOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_trade_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
   <select id="findUserTrade" parameterType="com.slljr.finance.common.pojo.model.UserTradeOrder" resultMap="BaseResultMap">
    select   
    <include refid="Base_Column_List" />
    from user_trade_order 
    where uid = #{uid,jdbcType=INTEGER}
    
  </select>
    <!-- <select id="findUserTradeDetails" resultMap="VoResultMap">
    select a.id,
    a.uid, a.type, a.payment_amount, a.receive_amount, a.service_charge, a.channel_id, a.payment_card_id, 
    a.receive_card_id, a.summary, a.bill_amount, a.card_balance, a.card_last_payment_date, a.payment_days, 
    a.status, a.create_time, a.update_time, b.type as payType, b.amount, b.card_id, b.service_charge,b.payment_time,b.status as payStatus
   FROM user_trade_order a LEFT JOIN user_trade_payment_record b ON a.id=b.trade_id
    where a.id = #{id,jdbcType=INTEGER}
  </select> -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_trade_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_trade_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.slljr.finance.common.pojo.model.UserTradeOrderExample">
    delete from user_trade_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.slljr.finance.common.pojo.model.UserTradeOrder">
    insert into user_trade_order (id, uid, 
      type, payment_amount, receive_amount, 
      service_charge, channel_id, payment_card_id, 
      receive_card_id, summary, bill_amount, 
      card_balance, card_last_payment_date, payment_days, 
      status, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER},
      #{type,jdbcType=INTEGER}, #{paymentAmount,jdbcType=DOUBLE}, #{receiveAmount,jdbcType=DOUBLE}, 
      #{serviceCharge,jdbcType=DOUBLE}, #{channelId,jdbcType=INTEGER}, #{paymentCardId,jdbcType=INTEGER},
      #{receiveCardId,jdbcType=INTEGER}, #{summary,jdbcType=VARCHAR}, #{billAmount,jdbcType=DOUBLE},
      #{cardBalance,jdbcType=DOUBLE}, #{cardLastPaymentDate,jdbcType=DATE}, #{paymentDays,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.slljr.finance.common.pojo.model.UserTradeOrder">
    insert into user_trade_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>     
      <if test="type != null">
        type,
      </if>
      <if test="paymentAmount != null">
        payment_amount,
      </if>
      <if test="receiveAmount != null">
        receive_amount,
      </if>
      <if test="serviceCharge != null">
        service_charge,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="paymentCardId != null">
        payment_card_id,
      </if>
      <if test="receiveCardId != null">
        receive_card_id,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="billAmount != null">
        bill_amount,
      </if>
      <if test="cardBalance != null">
        card_balance,
      </if>
      <if test="cardLastPaymentDate != null">
        card_last_payment_date,
      </if>
      <if test="paymentDays != null">
        payment_days,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="paymentAmount != null">
        #{paymentAmount,jdbcType=DOUBLE},
      </if>
      <if test="receiveAmount != null">
        #{receiveAmount,jdbcType=DOUBLE},
      </if>
      <if test="serviceCharge != null">
        #{serviceCharge,jdbcType=DOUBLE},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=INTEGER},
      </if>
      <if test="paymentCardId != null">
        #{paymentCardId,jdbcType=INTEGER},
      </if>
      <if test="receiveCardId != null">
        #{receiveCardId,jdbcType=INTEGER},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="billAmount != null">
        #{billAmount,jdbcType=DOUBLE},
      </if>
      <if test="cardBalance != null">
        #{cardBalance,jdbcType=DOUBLE},
      </if>
      <if test="cardLastPaymentDate != null">
        #{cardLastPaymentDate,jdbcType=DATE},
      </if>
      <if test="paymentDays != null">
        #{paymentDays,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.slljr.finance.common.pojo.model.UserTradeOrderExample" resultType="java.lang.Long">
    select count(*) from user_trade_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
 
  <select id="findUserTradeList" resultMap="ResultMapWithName">
        select
          <include refid="Base_Column_List1"/>
          ,ub.name                                      AS userName
          ,pc.name                                      AS paymentChannelName
          ,concat(b.name, right(ubc.bank_card_no, 4))   AS hidePayCardNo
          ,concat(b1.name, right(ubc1.bank_card_no, 4)) AS hideReceiveCardNo
        from user_trade_order t
        left join user_basic ub on ub.id = t.uid
        left join payment_channel pc on pc.id = t.channel_id
        left join user_bank_card ubc on ubc.id = t.payment_card_id
        left join bank b on b.id = ubc.bank_id
        left join user_bank_card ubc1 on ubc1.id = t.receive_card_id
        left join bank b1 on b1.id = ubc.bank_id
        where 1=1
        <if test="id!=null">
          and t.id=#{id,jdbcType=INTEGER}
        </if>
        <if test="uid!=null">
          and t.uid=#{uid,jdbcType=INTEGER}
        </if>    
        <if test="type!=null">
          and t.type=#{type,jdbcType=INTEGER}
        </if>
        <if test="paymentAmount!=null">
          and t.payment_amount=#{paymentAmount,jdbcType=DOUBLE}
        </if>
        <if test="receiveAmount!=null">
          and t.receive_amount=#{receiveAmount,jdbcType=DOUBLE}
        </if>
        <if test="serviceCharge!=null">
          and t.service_charge=#{serviceCharge,jdbcType=DOUBLE}
        </if>
        <if test="channelId!=null">
          and t.channel_id=#{channelId,jdbcType=INTEGER}
        </if>
        <if test="paymentCardId!=null">
          and t.payment_card_id=#{paymentCardId,jdbcType=VARCHAR}
        </if>
        <if test="receiveCardId!=null">
          and t.receive_card_id=#{receiveCardId,jdbcType=VARCHAR}
        </if>
        <if test="summary!=null">
          and t.summary=#{summary,jdbcType=VARCHAR}
        </if>
        <if test="billAmount!=null">
          and t.bill_amount=#{billAmount,jdbcType=DOUBLE}
        </if>
        <if test="cardBalance!=null">
          and t.card_balance=#{cardBalance,jdbcType=DOUBLE}
        </if>
        <if test="cardLastPaymentDate!=null">
          and t.card_last_payment_date=#{cardLastPaymentDate,jdbcType=DATE}
        </if>
        <if test="paymentDays!=null">
          and t.payment_days=#{paymentDays,jdbcType=VARCHAR}
        </if>
        <if test="status!=null">
          and t.status=#{status,jdbcType=INTEGER}
        </if>
        <if test="createTime!=null">
          and t.create_time=#{createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="updateTime!=null">
          and t.update_time=#{updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="province!=null">
          and t.province=#{province,jdbcType=VARCHAR}
        </if>
        <if test="city!=null">
          and t.city=#{city,jdbcType=VARCHAR}
        </if>
        <if test="startTime!=null">
          and t.create_time &gt;= #{startTime}
        </if>
        <if test="endTime!=null">
          and t.create_time &lt;= #{endTime}
        </if>
        <if test="userName!=null and userName != ''">
          and ub.name = #{userName}
        </if>
         order by t.create_time desc
    </select>
  
  
  <update id="updateByExampleSelective" parameterType="map">
    update user_trade_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.paymentAmount != null">
        payment_amount = #{record.paymentAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.receiveAmount != null">
        receive_amount = #{record.receiveAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.serviceCharge != null">
        service_charge = #{record.serviceCharge,jdbcType=DOUBLE},
      </if>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=INTEGER},
      </if>
      <if test="record.paymentCardId != null">
        payment_card_id = #{record.paymentCardId,jdbcType=INTEGER},
      </if>
      <if test="record.receiveCardId != null">
        receive_card_id = #{record.receiveCardId,jdbcType=INTEGER},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.billAmount != null">
        bill_amount = #{record.billAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.cardBalance != null">
        card_balance = #{record.cardBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.cardLastPaymentDate != null">
        card_last_payment_date = #{record.cardLastPaymentDate,jdbcType=DATE},
      </if>
      <if test="record.paymentDays != null">
        payment_days = #{record.paymentDays,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_trade_order
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      payment_amount = #{record.paymentAmount,jdbcType=DOUBLE},
      receive_amount = #{record.receiveAmount,jdbcType=DOUBLE},
      service_charge = #{record.serviceCharge,jdbcType=DOUBLE},
      channel_id = #{record.channelId,jdbcType=INTEGER},
      payment_card_id = #{record.paymentCardId,jdbcType=INTEGER},
      receive_card_id = #{record.receiveCardId,jdbcType=INTEGER},
      summary = #{record.summary,jdbcType=VARCHAR},
      bill_amount = #{record.billAmount,jdbcType=DOUBLE},
      card_balance = #{record.cardBalance,jdbcType=DOUBLE},
      card_last_payment_date = #{record.cardLastPaymentDate,jdbcType=DATE},
      payment_days = #{record.paymentDays,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.slljr.finance.common.pojo.model.UserTradeOrder">
    update user_trade_order
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="paymentAmount != null">
        payment_amount = #{paymentAmount,jdbcType=DOUBLE},
      </if>
      <if test="receiveAmount != null">
        receive_amount = #{receiveAmount,jdbcType=DOUBLE},
      </if>
      <if test="serviceCharge != null">
        service_charge = #{serviceCharge,jdbcType=DOUBLE},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=INTEGER},
      </if>
      <if test="paymentCardId != null">
        payment_card_id = #{paymentCardId,jdbcType=INTEGER},
      </if>
      <if test="receiveCardId != null">
        receive_card_id = #{receiveCardId,jdbcType=INTEGER},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="billAmount != null">
        bill_amount = #{billAmount,jdbcType=DOUBLE},
      </if>
      <if test="cardBalance != null">
        card_balance = #{cardBalance,jdbcType=DOUBLE},
      </if>
      <if test="cardLastPaymentDate != null">
        card_last_payment_date = #{cardLastPaymentDate,jdbcType=DATE},
      </if>
      <if test="paymentDays != null">
        payment_days = #{paymentDays,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.slljr.finance.common.pojo.model.UserTradeOrder">
    update user_trade_order
    set uid = #{uid,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      payment_amount = #{paymentAmount,jdbcType=DOUBLE},
      receive_amount = #{receiveAmount,jdbcType=DOUBLE},
      service_charge = #{serviceCharge,jdbcType=DOUBLE},
      channel_id = #{channelId,jdbcType=INTEGER},
      payment_card_id = #{paymentCardId,jdbcType=INTEGER},
      receive_card_id = #{receiveCardId,jdbcType=INTEGER},
      summary = #{summary,jdbcType=VARCHAR},
      bill_amount = #{billAmount,jdbcType=DOUBLE},
      card_balance = #{cardBalance,jdbcType=DOUBLE},
      card_last_payment_date = #{cardLastPaymentDate,jdbcType=DATE},
      payment_days = #{paymentDays,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--近30天按天统计交易额-->
  <select id="statisticsPaymentAmountByDay" parameterType="ArrayList"
          resultType="com.slljr.finance.common.pojo.vo.StatisticsResultVO">
    SELECT DATE_FORMAT(temp.totalDay,'%m/%d') AS statisticsKey,
           ifnull(sum(uto.payment_amount), 0) AS statisticsValue
    FROM (
    <foreach collection="days" item="listItem" separator="union all">
      SELECT DATE_SUB(CURDATE(), INTERVAL #{listItem} DAY) AS totalDay
    </foreach>
    ) AS temp
    LEFT JOIN user_trade_order uto ON date(uto.update_time) = temp.totalDay AND uto.status = 2
    GROUP BY temp.totalDay
  </select>

  <!--近12个月按天统计交易额-->
  <select id="statisticsPaymentAmountByMonth" parameterType="ArrayList"
          resultType="com.slljr.finance.common.pojo.vo.StatisticsResultVO">
    SELECT temp.totalDay                      AS statisticsKey,
           ifnull(sum(uto.payment_amount), 0) AS statisticsValue
    FROM (
    <foreach collection="months" item="listItem" separator="union all">
      SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL #{listItem} MONTH),'%Y/%m') AS totalDay
    </foreach>
    ) AS temp
    LEFT JOIN user_trade_order uto ON date_format(uto.update_time,'%Y/%m') = temp.totalDay AND uto.status = 2
    GROUP BY temp.totalDay
  </select>

  <!--近30天按天统计公司利润-->
  <select id="statisticsCompanyProfitByDay" parameterType="ArrayList"
          resultType="com.slljr.finance.common.pojo.vo.StatisticsResultVO">
    SELECT DATE_FORMAT(temp.totalDay,'%m/%d') AS statisticsKey,
           ifnull(sum(uto.company_profit), 0) AS statisticsValue
    FROM (
    <foreach collection="days" item="listItem" separator="union all">
      SELECT DATE_SUB(CURDATE(), INTERVAL #{listItem} DAY) AS totalDay
    </foreach>
    ) AS temp
    LEFT JOIN user_trade_order uto ON date(uto.update_time) = temp.totalDay AND uto.status = 2
    GROUP BY temp.totalDay
  </select>


  <!--近12个月按天统计公司利润-->
  <select id="statisticsCompanyProfitByMonth" parameterType="ArrayList"
          resultType="com.slljr.finance.common.pojo.vo.StatisticsResultVO">
    SELECT temp.totalDay                      AS statisticsKey,
           ifnull(sum(uto.company_profit), 0) AS statisticsValue
    FROM (
    <foreach collection="months" item="listItem" separator="union all">
      SELECT DATE_FORMAT(DATE_SUB(CURDATE(), INTERVAL #{listItem} MONTH),'%Y/%m') AS totalDay
    </foreach>
    ) AS temp
    LEFT JOIN user_trade_order uto ON date_format(uto.update_time,'%Y/%m') = temp.totalDay AND uto.status = 2
    GROUP BY temp.totalDay
  </select>
</mapper>