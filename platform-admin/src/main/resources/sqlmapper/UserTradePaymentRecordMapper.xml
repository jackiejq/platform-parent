<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slljr.finance.admin.mapper.UserTradePaymentRecordMapper">
  <resultMap id="BaseResultMap" type="com.slljr.finance.common.pojo.model.UserTradePaymentRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="trade_id" jdbcType="INTEGER" property="tradeId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="card_id" jdbcType="INTEGER" property="cardId" />
    <result column="service_charge" jdbcType="DOUBLE" property="serviceCharge" />
    <result column="channel_id" jdbcType="INTEGER" property="channelId" />
    <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime" />
    <result column="other_params" jdbcType="VARCHAR" property="otherParams" />
    <result column="error_msg" jdbcType="VARCHAR" property="errorMsg" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  
  <resultMap id="VoResultMap" type="com.slljr.finance.common.pojo.vo.UserTradePayDetailsVo" extends="BaseResultMap">
    <result column="bank_code" jdbcType="VARCHAR" property="bankCode" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_card_no" jdbcType="VARCHAR" property="bankCardNo" />

  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, uid, order_id,trade_id, type, amount, card_id, service_charge, channel_id, payment_time, 
    status, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.slljr.finance.common.pojo.model.UserTradePaymentRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_trade_payment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
   <!--<select id="findUserTradeDetails" resultMap="VoResultMap">-->
	<!--select  a.*,b.opening_bank as bank_name ,b.id as bank_code,c.payment_card_id,c.receive_card_id-->
	<!--from user_trade_order c LEFT JOIN  user_trade_payment_record a ON a.trade_id = c.id-->
	<!--LEFT JOIN  user_bank_card b ON b.uid=c.uid  where a.trade_id = #{id,jdbcType=INTEGER}-->
  <!--</select>-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_trade_payment_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_trade_payment_record
    where id = #{id,jdbcType=INTEGER} tradeId
  </delete>
  <delete id="deleteByExample" parameterType="com.slljr.finance.common.pojo.model.UserTradePaymentRecordExample">
    delete from user_trade_payment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.slljr.finance.common.pojo.model.UserTradePaymentRecord">
    insert into user_trade_payment_record (id, uid,order_id, trade_id, 
      type, amount, card_id, 
      service_charge, channel_id, payment_time, 
      status, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER},#{orderId,jdbcType=VARCHAR} ,#{tradeId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{amount,jdbcType=DOUBLE}, #{cardId,jdbcType=INTEGER}, 
      #{serviceCharge,jdbcType=DOUBLE}, #{channelId,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.slljr.finance.common.pojo.model.UserTradePaymentRecord">
    insert into user_trade_payment_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="tradeId != null">
        trade_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="cardId != null">
        card_id,
      </if>
      <if test="serviceCharge != null">
        service_charge,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>      
      <if test="tradeId != null">
        #{tradeId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="cardId != null">
        #{cardId,jdbcType=INTEGER},
      </if>
      <if test="serviceCharge != null">
        #{serviceCharge,jdbcType=DOUBLE},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.slljr.finance.common.pojo.model.UserTradePaymentRecordExample" resultType="java.lang.Long">
    select count(*) from user_trade_payment_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_trade_payment_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.tradeId != null">
        trade_id = #{record.tradeId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.cardId != null">
        card_id = #{record.cardId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceCharge != null">
        service_charge = #{record.serviceCharge,jdbcType=DOUBLE},
      </if>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=INTEGER},
      </if>
      <if test="record.paymentTime != null">
        payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_trade_payment_record
    set id = #{record.id,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      trade_id = #{record.tradeId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DOUBLE},
      card_id = #{record.cardId,jdbcType=INTEGER},
      service_charge = #{record.serviceCharge,jdbcType=DOUBLE},
      channel_id = #{record.channelId,jdbcType=INTEGER},
      payment_time = #{record.paymentTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.slljr.finance.common.pojo.model.UserTradePaymentRecord">
    update user_trade_payment_record
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="tradeId != null">
        trade_id = #{tradeId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="cardId != null">
        card_id = #{cardId,jdbcType=INTEGER},
      </if>
      <if test="serviceCharge != null">
        service_charge = #{serviceCharge,jdbcType=DOUBLE},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.slljr.finance.common.pojo.model.UserTradePaymentRecord">
    update user_trade_payment_record
    set uid = #{uid,jdbcType=INTEGER},
  	  order_id = #{orderId,jdbcType=VARCHAR},
      trade_id = #{tradeId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DOUBLE},
      card_id = #{cardId,jdbcType=INTEGER},
      service_charge = #{serviceCharge,jdbcType=DOUBLE},
      channel_id = #{channelId,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!--auto generated by codehelper on 2019-01-18-->
    <select id="findByTradeId" resultMap="VoResultMap">
        SELECT bk.`name` as bank_name,ubc.bank_card_no,utpr.* FROM user_trade_payment_record utpr
        LEFT JOIN user_bank_card ubc ON ubc.id=utpr.card_id
        LEFT JOIN bank bk ON bk.id=ubc.bank_id
        where utpr.trade_id=#{tradeId}
    </select>
</mapper>