<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slljr.finance.front.mapper.UserQuickConsumeMapper">
  <resultMap id="BaseResultMap" type="com.slljr.finance.common.pojo.model.UserQuickConsume">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="pay_amount" jdbcType="DOUBLE" property="payAmount" />
    <result column="get_amount" jdbcType="DOUBLE" property="getAmount" />
    <result column="service_charge" jdbcType="DOUBLE" property="serviceCharge" />
    <result column="channel_id" jdbcType="INTEGER" property="channelId" />
    <result column="credit_card_id" jdbcType="INTEGER" property="creditCardId" />
    <result column="bank_card_id" jdbcType="INTEGER" property="bankCardId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, order_id, pay_amount, get_amount, service_charge, channel_id, credit_card_id, 
    bank_card_id, status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_quick_consume
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_quick_consume
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.slljr.finance.common.pojo.model.UserQuickConsume">
    insert into user_quick_consume (id, uid, order_id, 
      pay_amount, get_amount, service_charge, 
      channel_id, credit_card_id, bank_card_id, 
      status, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{orderId,jdbcType=VARCHAR}, 
      #{payAmount,jdbcType=DOUBLE}, #{getAmount,jdbcType=DOUBLE}, #{serviceCharge,jdbcType=DOUBLE}, 
      #{channelId,jdbcType=INTEGER}, #{creditCardId,jdbcType=INTEGER}, #{bankCardId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.slljr.finance.common.pojo.model.UserQuickConsume">
    insert into user_quick_consume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="getAmount != null">
        get_amount,
      </if>
      <if test="serviceCharge != null">
        service_charge,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="creditCardId != null">
        credit_card_id,
      </if>
      <if test="bankCardId != null">
        bank_card_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DOUBLE},
      </if>
      <if test="getAmount != null">
        #{getAmount,jdbcType=DOUBLE},
      </if>
      <if test="serviceCharge != null">
        #{serviceCharge,jdbcType=DOUBLE},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=INTEGER},
      </if>
      <if test="creditCardId != null">
        #{creditCardId,jdbcType=INTEGER},
      </if>
      <if test="bankCardId != null">
        #{bankCardId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.slljr.finance.common.pojo.model.UserQuickConsume">
    update user_quick_consume
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DOUBLE},
      </if>
      <if test="getAmount != null">
        get_amount = #{getAmount,jdbcType=DOUBLE},
      </if>
      <if test="serviceCharge != null">
        service_charge = #{serviceCharge,jdbcType=DOUBLE},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=INTEGER},
      </if>
      <if test="creditCardId != null">
        credit_card_id = #{creditCardId,jdbcType=INTEGER},
      </if>
      <if test="bankCardId != null">
        bank_card_id = #{bankCardId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.slljr.finance.common.pojo.model.UserQuickConsume">
    update user_quick_consume
    set uid = #{uid,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=VARCHAR},
      pay_amount = #{payAmount,jdbcType=DOUBLE},
      get_amount = #{getAmount,jdbcType=DOUBLE},
      service_charge = #{serviceCharge,jdbcType=DOUBLE},
      channel_id = #{channelId,jdbcType=INTEGER},
      credit_card_id = #{creditCardId,jdbcType=INTEGER},
      bank_card_id = #{bankCardId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>